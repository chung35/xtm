
 
DataLife Engine 的 Nginx 网址重写规则
发布时间: 2011-12-23 / 分类: 技巧经验 / 浏览次数: 130 / 0个评论 发表评论
Nginx (“lib x”) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1 日，nginx 1.0.4发布。
DataLife Engine是一款来自俄罗斯的商业CMS系统，很多0day, Crack的站点都用此系统，在国外有一定的知名度，功能比较强大。多级分类管理，所见所得编辑器，图片附件管理，自动生成水印，略缩图，使用了基于文件型的标签 模板系统，模板安装使用特别容易上手，用户分级管理系统，敏感字符过滤，强大的评论管理系统PM信息，批量发送短消息或Email，外部RSS导入，整个 系统多处使用了ajax的技术，允许创建投票，单独的静态页面，自带站点内部广告，支持搜索引擎的友好URL，可以自定义一些项，MYSQL的压缩，备份，还原，灾难修复等。
国外很多网站，尤其是资源下载站都是用 DataLife Engine 建立的。汉化版的 DataLife Engine 可以到 http://donglicms.com/ 下载到。
基于建立网站的需要，我曾经查找过 DataLife Engine 的 Lighttpd 网址重写规则，可惜没有找到，于是自己研究了一下 DataLife Engine 的 Nginx 网址重写规则，
Nginx URL Rewrite Rule For Datalife Engine
DataLife Engine 的 Nginx 网址重写规则，代码如下：
# Redirects
rewrite ^/page/(.*)$ /index.php?cstart=$1 last;

# Post
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)/page,([0-9]+),([0-9]+),(.*).html(/?)+$ /index.php?subaction=showfull&year=$1&month=$2&day=$3&news_page=$4&cstart=$5&news_name=$6 last;
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)/page,([0-9]+),(.*).html(/?)+$ /index.php?subaction=showfull&year=$1&month=$2&day=$3&news_page=$4&news_name=$5 last;
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)/print:page,([0-9]+),(.*).html(/?)+$ /lib/print.php?subaction=showfull&year=$1&month=$2&day=$3&news_page=$4&news_name=$5 last;
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)/(.*).html(/?)+$ /index.php?subaction=showfull&year=$1&month=$2&day=$3&news_name=$4 last;

rewrite ^/([^.]+)/page,([0-9]+),([0-9]+),([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$4&news_page=$2&cstart=$3&seourl=$5&seocat=$1 last;
rewrite ^/([^.]+)/page,([0-9]+),([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$3&news_page=$2&seourl=$4&seocat=$1 last;
rewrite ^/([^.]+)/print:page,([0-9]+),([0-9]+)-(.*).html(/?)+$ /lib/print.php?news_page=$2&newsid=$3&seourl=$4&seocat=$1 last;
rewrite ^/([^.]+)/([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$2&seourl=$3&seocat=$1 last;

rewrite ^/page,([0-9]+),([0-9]+),([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$3&news_page=$1&cstart=$2&seourl=$4 last;
rewrite ^/page,([0-9]+),([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$2&news_page=$1&seourl=$3 last;
rewrite ^/print:page,([0-9]+),([0-9]+)-(.*).html(/?)+$ /lib/print.php?news_page=$1&newsid=$2&seourl=$3 last;
rewrite ^/([0-9]+)-(.*).html(/?)+$ /index.php?newsid=$1&seourl=$2 last;

# For day
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)(/?)+$ /index.php?year=$1&month=$2&day=$3 last;
rewrite ^/([0-9]+)/([0-9]+)/([0-9]+)/page/([0-9]+)(/?)+$ /index.php?year=$1&month=$2&day=$3&cstart=$4 last;
# For all months
rewrite ^/([0-9]+)/([0-9]+)(/?)+$ /index.php?year=$1&month=$2 last;
rewrite ^/([0-9]+)/([0-9]+)/page/([0-9]+)(/?)+$ /index.php?year=$1&month=$2&cstart=$3 last;
# Output for the entire year
rewrite ^/([0-9]+)(/?)+$ /index.php?year=$1 last;
rewrite ^/([0-9]+)/page/([0-9]+)(/?)+$ /index.php?year=$1&cstart=$2 last;
# Output for tags
rewrite ^/tags/([^/]*)(/?)+$ /index.php?do=tags&tag=$1 last;
rewrite ^/tags/([^/]*)/page/([0-9]+)(/?)+$ /index.php?do=tags&tag=$1&cstart=$2 last;
# Output for users
rewrite ^/user/([^/]*)/rss.xml$ /lib/rss.php?subaction=allnews&user=$1 last;
rewrite ^/user/([^/]*)(/?)+$ /index.php?subaction=userinfo&user=$1 last;
rewrite ^/user/([^/]*)/page/([0-9]+)(/?)+$ /index.php?subaction=userinfo&user=$1&cstart=$2 last;
rewrite ^/user/([^/]*)/news(/?)+$ /index.php?subaction=allnews&user=$1 last;
rewrite ^/user/([^/]*)/news/page/([0-9]+)(/?)+$ /index.php?subaction=allnews&user=$1&cstart=$2 last;
rewrite ^/user/([^/]*)/news/rss.xml(/?)+$ /lib/rss.php?subaction=allnews&user=$1 last;
# Output for last news
rewrite ^/lastnews/(/?)+$ /index.php?do=lastnews last;
rewrite ^/lastnews/page/([0-9]+)(/?)+$ /index.php?do=lastnews&cstart=$1 last;
# Output for catalog
rewrite ^/catalog/([^/]*)/rss.xml$ /lib/rss.php?catalog=$1 last;
rewrite ^/catalog/([^/]*)(/?)+$ /index.php?catalog=$1 last;
rewrite ^/catalog/([^/]*)/page/([0-9]+)(/?)+$ /index.php?catalog=$1&cstart=$2 last;
# Output for new posts
rewrite ^/newposts(/?)+$ /index.php?subaction=newposts last;
rewrite ^/newposts/page/([0-9]+)(/?)+$ /index.php?subaction=newposts&cstart=$1 last;
# Output for favorites news
rewrite ^/favorites(/?)+$ /index.php?do=favorites last;
rewrite ^/favorites/page/([0-9]+)(/?)+$ /index.php?do=favorites&cstart=$1 last;

rewrite ^/rules.html$ /index.php?do=rules last;
rewrite ^/statistics.html$ /index.php?do=stats last;
rewrite ^/addnews.html$ /index.php?do=addnews last;
rewrite ^/rss.xml$ /lib/rss.php last;
rewrite ^/sitemap.xml$ /uploads/sitemap.xml last;

if (!-d $request_filename) {
    rewrite ^/([^.]+)/page/([0-9]+)(/?)+$ /index.php?do=cat&category=$1&cstart=$2 last;
    rewrite ^/([^.]+)/?$ /index.php?do=cat&category=$1 last;
}

if (!-f $request_filename) {
    rewrite ^/([^<]+)/rss.xml$ /lib/rss.php?do=cat&category=$1 last;
    rewrite ^/page,([0-9]+),([^/]+).html$ /index.php?do=static&page=$2&news_page=$1 last;
    rewrite ^/print:([^/]+).html$ /lib/print.php?do=static&page=$1 last;
}

if (!-f $request_filename) {
    rewrite ^/([^/]+).html$ /index.php?do=static&page=$1 last;
}
请将上述代码存成 .conf 文件 （ linux 系统该文件保存在 /usr/local/nginx/conf ），并在网站设置里面加载。
IP 转向域名：
if ($host != 'www.betalog.com' ) {rewrite ^/(.*)$ http://www.betalog.com/$1 permanent;}
请自行替换 betalog.com 为自己的域名。
如果按照这个方法添加的 HTML站点地图 ，需要添加：
rewrite ^/sitemap/page/(.*)$ /sitemap/index.php?cstart=$1 last;

if (!-d $request_filename) {
    rewrite ^/sitemap/([^.]+)/page/([0-9]+)(/?)+$ /sitemap/index.php?do=cat&category=$1&cstart=$2 last;
    rewrite ^/sitemap/([^.]+)/?$ /sitemap/index.php?do=cat&category=$1 last;
	
}